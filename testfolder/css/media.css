/* обратимся ко всем элементам, чтобы убрать отступы,которые назначит браузер по умолчанию */
 *{
    padding: 0;
    margin: 0;
   }
   /* для основного контейнера будем использовать фиксировано-резиновую верстку */
   
   .container{
    width: 100vw;/* устанавливаем основную ширину равной ширине видимой части окна браузера vw-это как %*/               
    min-width: 320px;/*  минимальная ширина, до которой можно сжимать контейнер, если ширина устройства будет меньше - появится горизонт. скролл */
    max-width: 1200px;/*максимальная ширина, до которой можно расширять контейнер, если ширина будет больше - по бокам появятся отступы */
    margin: auto;/* для того, чтобы контейнер находился всегда  по центру по горизонтали указываем значения для внешних отступов */
    min-height: 100vh;/* в случае, если контента будет мало, чтобы страница полностью заполнила всю высоту окна браузера, устанавливаем миним. высоту*/
    /*10vh составляет 10% от текущей высоты области просмотра.*/
    height: auto;/* в случае, если контента будет много, чтобы появился вертикальный скролл, устанавливаем значение высоты равной содержимому*/
    display: flex; /* для более простого расположения элементов на странице, воспользуемся технологией flexBox */
    flex-direction: column;/* направление основной оси меняем на вертикальное */
}

header{
 background-color: pink;
 flex-basis: 10vh;/*зададим размер header по основной оси 10vw это 10% от текущей ширины области просмотра*/
}
/* main - основной элемент страницы является
 одновременно и flex-родителем и flex-контейнером */
main{
 /* чтобы заполнять все пространство по основной
 оси основным элементом прописываем свойство
 flex */
 flex: 1 1 auto;
 display: flex;
}
main>aside{
 background-color: cyan;
 flex-basis: 20%;/* зададим размер левой части по основной оси в процентах */
}
main>section{
 background-color: coral;
 flex: 1 1 auto;/* чтобы заполнять все пространство по основной оси
 основным элементом прописываем свойство flex */
}
main>section+aside{
 background-color: lime;
 flex-basis: 20%;/* размер правой части по основной оси в процентах */
}
footer{
    background-color: gray;
    /* зададим размер footer по основной оси */
    flex-basis: 5vh;
   }

   /* ДЛЯ ПЛАНШЕТОВ, для экранов с максимальной шириной
 960px и меньше*/
@media screen and (max-width:960px){
    main>section+aside{/* правый эемент лаймового цвета*/
        
 display: none;/* спрячем правый элемент на всех устройствах,
 с шириной 960px и меньше*/
}
main>aside{
    /* зададим размер левой части по основной оси
    в процентах*/
    flex-basis: 30%;
    }
    main>section{
    /* зададим размер центральной части
    по основной оси в процентах */
    flex-basis: 70%;
    }

  /* ДЛЯ СМАРТФОНОВ, для экранов с максимальной шириной 570px
 и меньше */
@media screen and (max-width:570px){
    main{
    /* меняем направление основной оси элемента
    отображающего основной контент */
    flex-direction: column;
    }
    main>aside{
    /* зададим размер видимому элементу aside
    по основной оси */
    flex-basis: 20vh;
    }
    main>section{/* Главная секция коралового цвета*/
    
    flex-basis: auto;/* зададим размер основному контенту
                      по основной оси, т.е. на всю ширину*/
    order:-1;/* изменим порядок отображения элементов так,
              чтобы контент находился выше, т.е. корал выше голубого*/
    }
   } 