//1. Написать функцию, принимающую в аргументах две строки и возвращающую true, если эти строки состоят из идентичных букв и false в противном случае.

function isEqual(str1, str2){

    if(str1.split("").sort().join("") == str2.split("").sort().join("")){
        return true;
    }

    return false;
}

//2. Напишите функцию, которая будет проходить через массив целых чисел и выводить индекс каждого элемента с задержкой в 3 секунды.


function outArray(arr) {
    let i = 0;
    let  counter  = setInterval(function() {
          console.log(i);
          i++;
          if(i == arr.length)
            clearInterval(counter);//Функция clearInterval() отменяет многократные повторения действий, установленные вызовом функции setInterval().
        }, 3000);
}
outArray([1,2,3,4,5]);

//Напишите функцию, которая на вход получает произвольное количество аргументов и возвращает массив, состоящих только из уникальных значений параметров функции.
function uniqueItem (arr){
    let result = [];
    for(let item of arr) {
     if(!result.includes(item)) {
     result.push(item);
     }
     }
     
     return result;
}
let arr1 = [1, 2, 3, 3, 5, 5, 4, 8, 10];
let arrunique =  uniqueItem(arr1);

console.log (arrunique);

//4. Написать функцию, принимающую в аргументах массив и возвращающую новый массив, в котором отсортированы все нечетные числа по возрастанию,
//  четные числа по убыванию,но при этом сами чётные и нечетные числа остаются на своих местах. ([7, 3, 4, 9, 5, 2, 17] -> [3, 5, 2, 7, 9, 4, 17]).

//5. Реализовать «бомбу» (в виде функции-конструктора), которая получает на входе время в секундах, через которое взорвется,
// выполняет обратный отсчет, и в конце выводит «взрыв» (строку, которую вернет через заданное время).

